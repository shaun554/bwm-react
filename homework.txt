##### Assigment 1, Rental Detail #####

1. Create Rental Detail class component
2. in render function just output text "I am detail component"
3. Good luck have fun


##### Assigment 2, Get Rental From Array By Id #####

1. Find Rental by ID in array and send it in action
2. Complete Reducer similiar as we did rentalsReducer
3. Good luck have fun if you are stuck continue video and follow me


##### Assigment 3, Create Login and Register #####

1. Create new folder in "components" with name "login" and inside create class component Login
2. Create new folder in "components" with name "register" and inside create class component Register
3. Create routes to these components -  "/login" to Login Component
                                     -  "/register" to Register Component

4. Test if Routing Works!
5. Good luck have fun if you are stuck continue video and follow me


##### Assigment 4, Create Login Redux Form #####
1. Copy file provided in resources of this lecture and paste it to "render" of  "Login.js" component;
2. Create LoginForm.js in "login folder"
3. In Login Form create "Email" and "Password" inputs, similiar as in Register Form

NOTE: You do not need to handle validation and errors yet.

4. In "Login" component create function "loginUser" and console log this data on submit form.
5. Good luck have fun if you are stuck continue video and follow me


##### Assigment 5, Login Redux Component #####

1. Apply connect HOC to login component

NOTE: Do not forget to remove first export in Login.js since we are exporting default with connect
      In App.js fix Login import.

2. Create mapStateToProps function and provide it to Login component
3. In loginUser dispatch action login
4. Try to login user, check network tab
5. Good luck have fun if you are stuck continue video and follow me


########## ASSIGNMENT 6, Create rental-search ############

1. Create "RentalSearchListing" with connect inside of rental-listing folder
2. Inside render function return same code as in RentalListing component
3. Create simple route "/rentals/:city/homes" to component
4. Inside of RentalSearch listing in componentWillMount get :city from url and set it to state
   similiar as we doing in RentalDetail
5. Display city somewhere in render function
5. Test to navigate to this route
6. Have fun, if you are stuck continue video and follow me.


########## ASSIGNMENT 6, Create rental create redux form ############
1. Create RentalCreateForm.js in "rental-create"
2. Apply "reduxForm" HOC to it
3. For now create just inputs for --  title, city, street, bedrooms, dailyRate since other fields are different types
--you can create other inputs if you feel like (: - image, category, descripton, shared
4. get values from FORM and display them after form submit.
5. Have fun, if you are stuck continue video and follow me.

########## ASSIGNMENT 7, Create action to create rental ############
1. Create new action in "actions/index.js", we do not want to dispatch action because there will be no state update
2. send post request to "/rentals" with rental data from form
3. Do not forget to catch error
4. In RentalCreate.js call this action
5. On success redirect to '/rentals' , how you redirect is up to you (withRouter or <Redirect />)
6. On fail display errors
7. Have fun, if you are stuck continue video and follow me.

########## ASSIGNMENT 8, Create Rental Manage Booking and Rental ############
1. Create new class components "ManageBooking" and "ManageRental" in "components/manage"
2. Display just comething on view
3.
